#!/usr/bin/env ts-node
'use strict';var __importDefault=this&&this['__importDefault']||function(_0x24d531){return _0x24d531&&_0x24d531['__esModule']?_0x24d531:{'default':_0x24d531};};Object['defineProperty'](exports,'__esModule',{'value':!![]});const mongoose_1=__importDefault(require('mongoose')),logger_1=require('../utils/logger'),data_access_1=__importDefault(require('../min-repo/data-access')),get_store_masters_1=__importDefault(require('../min-repo/services/get-store-masters')),config_1=__importDefault(require('../config/config')),connectDatabase=async _0x1c4018=>{try{const _0x208959={'autoCreate':!![],'keepAlive':!![],'retryReads':!![]};mongoose_1['default']['set']('strictQuery',!![]);const _0x1f985e=await mongoose_1['default']['connect'](_0x1c4018,_0x208959);_0x1f985e&&logger_1['logger']['info']('MongoDB\x20connected');}catch(_0x3641e){logger_1['logger']['error']('ConnectDatabase:\x20'+_0x3641e['message']);throw _0x3641e;}},testGetStoreMasters=async()=>{try{const _0x579cb4=new Date();logger_1['logger']['info']('Starting\x20getStoreMasters\x20test\x20script...'),logger_1['logger']['info']('Connecting\x20to\x20database...');if(!config_1['default']['DATABASE'])throw new Error('DATABASE\x20environment\x20variable\x20is\x20not\x20set');await connectDatabase(config_1['default']['DATABASE']),logger_1['logger']['info']('Extracting\x20store\x20masters\x20data...');const _0x10c9b6=await get_store_masters_1['default']['extractData']('2025-09-24'),_0x4b3a43=new Date(),_0x312880=((_0x4b3a43['getTime']()-_0x579cb4['getTime']())/0x3e8)['toFixed'](0x2);logger_1['logger']['info']('Extracted:\x20'+_0x10c9b6['length']+'\x20store\x20records\x20(in\x20'+_0x312880+'s)');if(_0x10c9b6['length']>0x0){logger_1['logger']['info']('Saving\x20store\x20masters\x20data\x20to\x20database...');const _0x53efbe=new Date(),_0x30df39=await data_access_1['default']['storeMasterDB']['saveDatas'](_0x10c9b6),_0x24d873=new Date(),_0x27f1ba=((_0x24d873['getTime']()-_0x53efbe['getTime']())/0x3e8)['toFixed'](0x2);logger_1['logger']['info']('Database\x20save\x20completed\x20in\x20'+_0x27f1ba+'s:'),logger_1['logger']['info']('-\x20Total\x20processed:\x20'+_0x30df39['totalProcessed']),logger_1['logger']['info']('-\x20Valid\x20records:\x20'+_0x30df39['validRecords']),logger_1['logger']['info']('-\x20Successfully\x20saved:\x20'+_0x30df39['savedStores']),logger_1['logger']['info']('-\x20Skipped\x20(duplicates/errors):\x20'+_0x30df39['skippedStores']),logger_1['logger']['info']('-\x20Errors:\x20'+_0x30df39['errors']);}else logger_1['logger']['warn']('No\x20store\x20masters\x20data\x20extracted\x20to\x20save');const _0x1ee2ff=new Date(),_0x494f19=((_0x1ee2ff['getTime']()-_0x579cb4['getTime']())/0x3e8)['toFixed'](0x2);logger_1['logger']['info']('Total\x20process\x20completed\x20in\x20'+_0x494f19+'s');}catch(_0x20e72b){logger_1['logger']['error']('Failed\x20to\x20test\x20getStoreMasters:\x20'+_0x20e72b['message']),process['exit'](0x1);}finally{try{mongoose_1['default']['connection']['readyState']===0x1&&(await mongoose_1['default']['connection']['close'](),logger_1['logger']['info']('Database\x20connection\x20closed\x20successfully'));}catch(_0x1dcc00){logger_1['logger']['error']('Error\x20closing\x20database\x20connection:\x20'+_0x1dcc00['message']);}}};testGetStoreMasters();