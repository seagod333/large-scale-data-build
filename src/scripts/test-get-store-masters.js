#!/usr/bin/env ts-node
'use strict';var __importDefault=this&&this['__importDefault']||function(_0x50c48b){return _0x50c48b&&_0x50c48b['__esModule']?_0x50c48b:{'default':_0x50c48b};};Object['defineProperty'](exports,'__esModule',{'value':!![]});const mongoose_1=__importDefault(require('mongoose')),logger_1=require('../utils/logger'),data_access_1=__importDefault(require('../min-repo/data-access')),get_store_masters_1=__importDefault(require('../min-repo/services/get-store-masters')),config_1=__importDefault(require('../config/config')),connectDatabase=async _0x4dbabe=>{try{const _0x5989f9={'autoCreate':!![],'keepAlive':!![],'retryReads':!![]};mongoose_1['default']['set']('strictQuery',!![]);const _0x2ab965=await mongoose_1['default']['connect'](_0x4dbabe,_0x5989f9);_0x2ab965&&logger_1['logger']['info']('MongoDB\x20connected');}catch(_0x1b0be5){logger_1['logger']['error']('ConnectDatabase:\x20'+_0x1b0be5['message']);throw _0x1b0be5;}},testGetStoreMasters=async()=>{try{const _0x1a044c=new Date();logger_1['logger']['info']('Starting\x20getStoreMasters\x20test\x20script...'),logger_1['logger']['info']('Connecting\x20to\x20database...');if(!config_1['default']['DATABASE'])throw new Error('DATABASE\x20environment\x20variable\x20is\x20not\x20set');await connectDatabase(config_1['default']['DATABASE']),logger_1['logger']['info']('Extracting\x20store\x20masters\x20data...');const _0x1dd93e=await get_store_masters_1['default']['extractData']('2025-09-24'),_0x409033=new Date(),_0x5d10d2=((_0x409033['getTime']()-_0x1a044c['getTime']())/0x3e8)['toFixed'](0x2);logger_1['logger']['info']('Extracted:\x20'+_0x1dd93e['length']+'\x20store\x20records\x20(in\x20'+_0x5d10d2+'s)');if(_0x1dd93e['length']>0x0){logger_1['logger']['info']('Saving\x20store\x20masters\x20data\x20to\x20database...');const _0xcc3153=new Date(),_0x44a9d9=await data_access_1['default']['storeMasterDB']['saveDatas'](_0x1dd93e),_0x536272=new Date(),_0x1cf5b4=((_0x536272['getTime']()-_0xcc3153['getTime']())/0x3e8)['toFixed'](0x2);logger_1['logger']['info']('Database\x20save\x20completed\x20in\x20'+_0x1cf5b4+'s:'),logger_1['logger']['info']('-\x20Total\x20processed:\x20'+_0x44a9d9['totalProcessed']),logger_1['logger']['info']('-\x20Valid\x20records:\x20'+_0x44a9d9['validRecords']),logger_1['logger']['info']('-\x20Successfully\x20saved:\x20'+_0x44a9d9['savedStores']),logger_1['logger']['info']('-\x20Skipped\x20(duplicates/errors):\x20'+_0x44a9d9['skippedStores']),logger_1['logger']['info']('-\x20Errors:\x20'+_0x44a9d9['errors']);}else logger_1['logger']['warn']('No\x20store\x20masters\x20data\x20extracted\x20to\x20save');const _0x3ce760=new Date(),_0x4100a5=((_0x3ce760['getTime']()-_0x1a044c['getTime']())/0x3e8)['toFixed'](0x2);logger_1['logger']['info']('Total\x20process\x20completed\x20in\x20'+_0x4100a5+'s');}catch(_0x4698e8){logger_1['logger']['error']('Failed\x20to\x20test\x20getStoreMasters:\x20'+_0x4698e8['message']),process['exit'](0x1);}finally{try{mongoose_1['default']['connection']['readyState']===0x1&&(await mongoose_1['default']['connection']['close'](),logger_1['logger']['info']('Database\x20connection\x20closed\x20successfully'));}catch(_0x2b5ef7){logger_1['logger']['error']('Error\x20closing\x20database\x20connection:\x20'+_0x2b5ef7['message']);}}};testGetStoreMasters();